name: Pull request checks

on: [pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    container:
      image: robojackets/robocup-software:foxy
    defaults:
      run:
        shell: bash
    steps:
      - name: Config git
        run: "git config --global --add safe.directory /__w/robocup-software/robocup-software"

      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Run util/ubuntu-setup as sudo
        run: "sudo ./util/ubuntu-setup --yes"

      - name: Install git pre-commit hooks & update submodules
        run: "./util/git-setup --yes"

      - name: Make ${{ github.base_ref }} branch exist
        run: |
          git checkout -b ${{ github.base_ref }} --track origin/${{ github.base_ref }}
          git checkout -

      - name: Build
        run: |
          echo "::add-matcher::ci/clang.json"
          source /opt/ros/foxy/setup.bash
          source install/setup.bash
          make all
          echo "::remove-matcher owner=clang::"

      - name: Test
        run: |
          echo "::add-matcher::ci/gtest.json"
          source /opt/ros/foxy/setup.bash
          source install/setup.bash
          ./install/lib/rj_robocup/test-soccer
          echo "::remove-matcher owner=gtest::"

      - name: Run clang-tidy
        run: |
          echo "::add-matcher::ci/clang-tidy.json"
          source /opt/ros/foxy/setup.bash
          source install/setup.bash
          DIFFBASE=${{ github.base_ref }} make checktidy-lines
          echo "::remove-matcher owner=clang-tidy::"
        if: always()

  fix-style:
    runs-on: ubuntu-latest
    container:
      image: ros:foxy
    defaults:
      run:
        shell: bash
    steps:
      - name: Config git
        run: "git config --global --add safe.directory /__w/robocup-software/robocup-software"

      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Make ${{ github.base_ref }} branch exist
        run: |
          git checkout -b ${{ github.base_ref }} --track origin/${{ github.base_ref }}
          git checkout -

      - name: Install dependencies
        run: |
          apt-get update && apt-get -y install clang-format sudo git python3-pip
          sudo pip3 install --upgrade flake8-diff flake8 pip
          sudo pip3 install --upgrade black

      - name: Make ${{ github.head_ref }} branch exist
        run: |
            git checkout -b ${{ github.head_ref }}
            git checkout -

      - name: Run style on all changed files
        run: |
            # check formatting style (C++)
            echo "::add-matcher::ci/clang-format.json"
            git diff -U0 --no-color ${{ github.base_ref }} ${{ github.head_ref }} | python3 util/clang-format-diff.py -binary clang-format-10 -i -p1
            echo "::remove-matcher owner=clang-format::"

            # for Python files
            git diff -U0 --no-color ${{ github.base_ref }} ${{ github.head_ref }} | black . --experimental-string-processing

      - uses: stefanzweifel/git-auto-commit-action@v4
        with: 
          skip_checkout: true
          skip_fetch: true
          commit_message: Automatic style
          create_branch: false
          commit_options: '--no-verify --signoff'

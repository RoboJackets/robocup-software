Import('*')

e = env.Clone()

# Include bullet headers for demo code for drawing with OpenGl 
e.Append(CPPPATH=['./bullet_opengl'])

# Find uic output
e.Append(CPPPATH='ui')

# Include headers in this folder
e.Append(CPPPATH='.')

# bullet library search path
e.Append(CPPPATH=['/usr/include/bullet'])

# add opengl libraries
e.Append(LIBS=[    
	'glut',
	'GL', 
	'GLU',
	'BulletDynamics',
	'BulletCollision',
	'LinearMath'])

# Components for the simulator
# Note: includes visualization demo parts for now
SRC = [
	'simulator.cpp',
	'SimulatorWindow.cpp',
	'SimulatorGLUTThread.cpp',
	'RobotTableModel.cpp',
	#'rendering/SimRenderView.cpp',
	#'rendering/Patch.cpp',
	#'rendering/Geometry.cpp',
	#'rendering/Primitives.cpp',
	#'rendering/VizObject.cpp',
	'physics/GlutCamera.cpp',
	'physics/SimEngine.cpp',
	'physics/Environment.cpp',
	'physics/Entity.cpp',
	'physics/Ball.cpp',
	'physics/Field.cpp',
	'physics/Robot.cpp',
	'physics/RobotBallController.cpp',
	'physics/FastTimer.cpp',

	# code for drawing bullet shapes with OpenGL
	'bullet_opengl/GLDebugDrawer.cpp',
	'bullet_opengl/GL_Simplex1to4.cpp',
	'bullet_opengl/GlutDemoApplication.cpp',
	'bullet_opengl/DemoApplication.cpp',
	'bullet_opengl/GL_DialogWindow.cpp',
	'bullet_opengl/GLDebugFont.cpp',
	'bullet_opengl/GlutStuff.cpp',
	'bullet_opengl/GL_ShapeDrawer.cpp',
	'bullet_opengl/RenderTexture.cpp',
	'bullet_opengl/GL_DialogDynamicsWorld.cpp',
	'bullet_opengl/stb_image.cpp',
]


p1 = e.Program('simulator', SRC)


uics = e.Uic4([
	'ui/SimulatorWindow.ui',
	'ui/SimpleSimulatorWindow.ui'
])
e.Depends(p1, uics)

# Simulator executable
Default(e.Install(exec_dir, p1))
Help('simulator: Provides simulation of SSL robots, using Bullet Physics\n')


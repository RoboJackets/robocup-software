Import('*')

e = env.Clone()

# Include everything from bullet 
e.Append(CPPPATH=['#/bullet/src', '#/bullet/Demos/OpenGL'])

# Find uic output
e.Append(CPPPATH='ui')

# Include headers in this folder
e.Append(CPPPATH='.')

# Add all bullet libraries at once
e.Append(LIBS=['bullet'])

# add opengl libraries
e.Append(LIBS=[    
	'glut',
	'GL', 
	'GLU'])

# Components for the simulator
# Note: includes visualization demo parts for now
p1 = e.Program('simulator', [
	'simulator.cpp',
	'SimulatorWindow.cpp',
	'rendering/SimRenderView.cpp',
	'rendering/Patch.cpp',
	'rendering/Geometry.cpp',
	'rendering/Primitives.cpp',
	'rendering/VizObject.cpp',
	'Physics/Environment.cpp',
	'Physics/Entity.cpp',
	'Physics/Ball.cpp',
	'Physics/Field.cpp',
	'Physics/Robot.cpp'])

uics = e.Uic4([
	'ui/SimulatorWindow.ui'
])
e.Depends(p1, uics)

# Simulator executable
Default(e.Install(exec_dir, p1))
Help('simulator: Provides simulation of SSL robots, using Bullet Physics\n')

# add demos for testing
p2 = e.Program('vehicle_demo', [
	'bullet_demo/vehicle_demo.cpp', 
	'bullet_demo/VehicleDemo.cpp',
	'bullet_demo/SimpleVehicle.cpp',
	'bullet_demo/GroundSurface.cpp',
	'bullet_demo/GlutCamera.cpp',
	'Physics/SimEngine.cpp'])
Default(e.Install(exec_dir, p2))
Help('vehicle_demo: Example code for bullet with simple GUI\n')

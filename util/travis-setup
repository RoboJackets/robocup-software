#!/bin/bash

# This script sets up a travis-ci VM for compiling our project
# Unfortunately we can't use our regular ubuntu setup script because travis
# uses a much older version of Ubuntu
# NOTE: this must be executed from the root of the repo


# we have to get the games PPA so we can install libbullet-dev
wget -q -O - http://archive.getdeb.net/getdeb-archive.key | sudo apt-key add -
sudo sh -c 'echo "deb http://archive.getdeb.net/ubuntu raring-getdeb games" >> /etc/apt/sources.list.d/getdeb.list'

# add repo so we can use qt5
sudo add-apt-repository --yes ppa:ubuntu-sdk-team/ppa

# add boost-latest ppa
sudo add-apt-repository --yes ppa:boost-latest/ppa

# add repo for gcc-4.7
sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test

# we use boost python 3.3, but ubuntu12.04 (which travis uses as of now) has an older version
# we get around this by using 'apt-pinning' to get this package from a newer ubuntu repo
# see this link for more info: http://askubuntu.com/questions/103320/install-packages-from-newer-release-without-building-apt-pinning
#- sudo sh -c 'echo "Package&colon; libboost*\\nPin&colon; release n=saucy\\nPin-Priority&colon; 990\\n" >> /etc/apt/preferences.d/robocup.pref'
#- sudo sh -c 'echo "Package&colon; python*\\nPin&colon; release n=saucy\\nPin-Priority&colon; 990\\n" >> /etc/apt/preferences.d/robocup.pref'
#- sudo sh -c 'echo "deb http://archive.ubuntu.com/ubuntu saucy main" > /etc/apt/sources.list.d/saucy.list'

sudo apt-get update -qq

# install ubuntu packages
sudo apt-get install --yes \
cmake \
ccache \
qt5-default \
qttools5-dev-tools \
libeigen3-dev \
libbullet-dev \
clang \
libboost-all-dev \
protobuf-compiler \
libprotobuf-dev \
graphviz \
python3 \
python3-dev \
python3-setuptools \
libboost-python-dev \
libusb-1.0.0-dev \
gcc-4.7 g++-4.7 \
freeglut3-dev \
libbfd-dev \
libspnav-dev

# install CMake from source b/c we need >= 3.0.0
wget http://www.cmake.org/files/v3.0/cmake-3.0.2.tar.gz
tar -xvzf cmake-3.0.2.tar.gz
cd cmake-3.0.2
./bootstrap
make >> make.log 2>&1
sudo make install >> install.log 2>&1
cd ..

# use new compilers
export CC=gcc-4.7
export CXX=g++-4.7

# install python3 dependencies
sudo easy_install pip
sudo pip install -r ./util/requirements3.txt

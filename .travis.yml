language: cpp
compiler: clang

submodules: false

# holds github oauth token so we can push compiled doxygen documentation
# generated with: `travis encrypt 'GIT_USERNAME="justbuchanan" GIT_EMAIL="justbuchanan@gmail.com" GH_TOKEN=######################'`
env:
  global:
    secure: "L9gLcUuHMBnCeHIyecTAUR0C3FoS6HwyQzrYm50leQ4icxFNfusqDJcsOQGs9JrGucLxq8Oj+hcYJUXQLKT2iQLm0IWfji0/w5H9Ocy5GZDmw8xUvJOJjgGwKdndn+lgsvRkmTtBguz4Pyn2gkUlILKDoR4Jx6pQ4jxrJkVMEA0="


before_install:
  # auto-update documentation site
  - './autoupdate-docs-travis.sh'

  # we have to get the games PPA so we can install libbullet-dev
  - wget -q -O - http://archive.getdeb.net/getdeb-archive.key | sudo apt-key add -
  - sudo sh -c 'echo "deb http://archive.getdeb.net/ubuntu raring-getdeb games" >> /etc/apt/sources.list.d/getdeb.list'

  # add repo so we can use qt5
  - sudo add-apt-repository --yes ppa:ubuntu-sdk-team/ppa

  # we use boost python 3.3, but ubuntu12.04 (which travis uses as of now) has an older version
  # we get around this by using 'apt-pinning' to get this package from a newer ubuntu repo
  # see this link for more info: http://askubuntu.com/questions/103320/install-packages-from-newer-release-without-building-apt-pinning
  #- sudo sh -c 'echo "Package&colon; libboost*\\nPin&colon; release n=saucy\\nPin-Priority&colon; 990\\n" >> /etc/apt/preferences.d/robocup.pref'
  #- sudo sh -c 'echo "Package&colon; python*\\nPin&colon; release n=saucy\\nPin-Priority&colon; 990\\n" >> /etc/apt/preferences.d/robocup.pref'
  #- sudo sh -c 'echo "deb http://archive.ubuntu.com/ubuntu saucy main" > /etc/apt/sources.list.d/saucy.list'

  - sudo apt-get update -qq

  # install ubuntu packages
  - sudo apt-get install \
  - cmake \ 
  - qt5-default
  - qttools5-dev-tools \
  - libeigen3-dev \
  - libbullet-dev \
  - clang \
  - libboost-all-dev \
  - protobuf-compiler \
  - libprotobuf-dev \
  - graphviz \
  - python3 \
  - python3-dev \
  - python3-setuptools \
  - libboost-python-dev \
  - libusb-1.0.0-dev

  # install python3 dependencies
  - sudo pip3 install -r ./util/requirements3.txt

script: make && make tests

notifications:
  email: true

defaults: &dir
  working_directory: ~/robocup-software

defaults: &image
  docker:
    - image: robojackets/robocup-software:master
      environment:
        GOPATH: ~/go
        PATH: ~/go/bin

defaults: &install_deps
  run: sudo ./util/ubuntu-setup --yes && sudo ccache -M 100M
defaults: &save_src_cache
  save_cache:
    key: source-v1-{{ .Branch }}-{{ .Revision }}
    paths:
      - ".git"
defaults: &load_src_cache
  restore_cache:
    keys:
      - source-v1-{{ .Branch }}-{{ .Revision }}
      - source-v1-{{ .Branch }}-
      - source-v1-
defaults: &save_compile_cache
  save_cache:
    key: ccache-{{ arch }}-{{ .Branch }}-{{ .Revision }}
    paths:
      - ~/.ccache
defaults: &save_compile_coverage_cache
  save_cache:
    key: ccache-cov-{{ arch }}-{{ .Branch }}-{{ .Revision }}
    paths:
      - ~/.ccache
defaults: &save_compile_test_cache
  save_cache:
    key: ccache-test-{{ arch }}-{{ .Branch }}-{{ .Revision }}
    paths:
      - ~/.ccache
defaults: &load_compile_cache
  restore_cache:
    keys:
      - ccache-{{ arch }}-{{ .Branch }}-{{ .Revision }}
      - ccache-{{ arch }}-{{ .Branch }}
      - ccache-{{ arch }}
      - ccache-
defaults: &load_compile_coverage_cache
  restore_cache:
    keys:
      - ccache-cov-{{ arch }}-{{ .Branch }}-{{ .Revision }}
      - ccache-cov-{{ arch }}-{{ .Branch }}
      - ccache-cov-{{ arch }}
      - ccache-cov-
defaults: &load_compile_test_cache
  restore_cache:
    keys:
      - ccache-test-{{ arch }}-{{ .Branch }}-{{ .Revision }}
      - ccache-test-{{ arch }}-{{ .Branch }}
      - ccache-test-{{ arch }}
      - ccache-test-
defaults: &save_workspace
  persist_to_workspace:
    root: build
    paths:
      - ./*
defaults: &load_workspace
  attach_workspace:
    at: build

version: 2
jobs:
  compile:
    <<: *dir
    <<: *image
    steps:
      - <<: *load_src_cache
      - checkout
      # Ensure latest deps are installed
      - <<: *install_deps
      - <<: *load_compile_cache
      - run: make
      - <<: *save_compile_cache
      - <<: *save_workspace

  test-soccer:
    <<: *dir
    <<: *image
    steps:
      - <<: *load_src_cache
      - checkout
      # Ensure latest deps are installed
      - <<: *install_deps
      - <<: *load_workspace
      - <<: *load_compile_test_cache
      - run: make test-soccer
      - <<: *save_compile_test_cache

  test-python:
    <<: *dir
    <<: *image
    steps:
      - <<: *load_src_cache
      - checkout
      # Ensure latest deps are installed
      - <<: *install_deps
      - <<: *load_workspace
      - <<: *load_compile_cache
      - run: make test-python

  # FIXME: pylint is broken on 18.04
  pylint:
    <<: *dir
    docker:
      - image: robojackets/robocup-software:16
    steps:
      - <<: *load_src_cache
      - checkout
      - <<: *install_deps
      - run: make pylint

  mypy:
    <<: *dir
    docker:
      - image: python:3
    steps:
      - <<: *load_src_cache
      - checkout
      - run: pip3 install -r util/requirements3.txt
      - run: make mypy

  style:
    <<: *dir
    <<: *image
    steps:
      - <<: *load_src_cache
      - checkout
      # Ensure latest deps are installed
      - <<: *install_deps
      - <<: *load_workspace
      - <<: *load_compile_cache
      - run: git fetch origin && STYLIZE_DIFFBASE=origin/master make checkstyle
      - store_artifacts:
          path: /tmp/clean.patch

  coverage:
    <<: *dir
    <<: *image
    steps:
      - <<: *load_src_cache
      - checkout
      # Ensure latest deps are installed
      - <<: *install_deps
      # save src cache in coverage task as nothing depends on it, we can take our time.
      - <<: *save_src_cache
      - <<: *load_compile_coverage_cache
      - run: make coverage
      - <<: *save_compile_coverage_cache

  gen-docs:
    <<: *dir
    <<: *image
    steps:
      - <<: *load_src_cache
      - checkout
      # Ensure latest deps are installed
      - <<: *install_deps
      - <<: *load_workspace
      - <<: *load_compile_test_cache
      - run: ./autoupdate-docs.sh

workflows:
  version: 2
  build_and_test:
    jobs:
      - compile
      - coverage
      - test-soccer:
          requires:
            - compile
      - test-python:
          requires:
            - compile
      - pylint
      - mypy:
          requires:
            - compile
      - style:
          requires:
            - compile

      - gen-docs:
          requires:
            - test-soccer
            - test-python
            - pylint
            - mypy
            - style
            - compile

          filters:
            branches:
              only: master

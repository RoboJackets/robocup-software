Import('*')

e = env.Clone()

# build gtest
gtest_main_a = '#/test/gtest/make/gtest_main.a'
build_gtest = e.Command(gtest_main_a, '', 'cd test/gtest/make; make')
rename_gtest = e.Command('#/test/gtest/make/libgtest.a', gtest_main_a, 'cd test/gtest/make; ln -s gtest_main.a libgtest.a')

# add all test .cpp files here
test_srcs = [
	'../soccer/planning/Path.cpp',
	'../soccer/motion/TrapezoidalMotion.cpp',
	'../soccer/planning/Obstacle.cpp'
]
test_srcs += Glob('../soccer/tests/*.cpp')

e.Append(LIBS=['gtest'])
e.Append(LIBPATH=['../test/gtest/make'])
e.Append(CPPPATH=['../test/gtest/include'])

# include paths
e.Append(CPPPATH=['../soccer'])

# build the program that runs the tests
test_runner = e.Program('test-runner', test_srcs)
e.Depends(test_runner, rename_gtest);
install_test_runner = e.Install(exec_dir, test_runner)

# make a 'test' command so that 'scons test' builds the tests and runs them
test = e.Command('file-that-doesnt-exist',
	exec_dir.File('test-runner'),
	'%s' % exec_dir.File('test-runner'))
AlwaysBuild(test)
e.Depends(test, install_test_runner)
e.Depends(test, test_runner)

Import('*')

srcs = [
#	'main.cpp',  # don't include main here to allow for separate test and run executables
	'Processor.cpp',
	'Logger.cpp',
	'MainWindow.cpp',
	'ProtobufTree.cpp',
	'Joystick.cpp',
	'RefereeModule.cpp',
	'PlayConfigTab.cpp',
	'FieldView.cpp',
	'SimFieldView.cpp',
	'Configuration.cpp',
	'debug.cpp',
	'StripChart.cpp',
	'Robot.cpp',
	'BallSensor.cpp',

	'radio/SimRadio.cpp',
	'radio/USBRadio.cpp',

	'framework/Obstacle.cpp',
	'framework/Path.cpp',
	'framework/SystemState.cpp',
	'framework/RobotConfig.cpp',

# Sources for gameplay module

	# Core gameplay components',
	'gameplay/GameplayModule.cpp',
	'gameplay/Play.cpp',
	'gameplay/Behavior.cpp',
	'gameplay/Window.cpp',
	'gameplay/PreventDoubleTouch.cpp',

	# Planning components',
	'gameplay/planning/rrt.cpp',
	'gameplay/planning/Tree.cpp',
	'gameplay/planning/bezier.cpp',

	# Optimization components - disabled for now
	#'gameplay/optimizer/PassOptimizer.cpp',
	#'gameplay/optimizer/PassConfig.cpp',
	#'gameplay/optimizer/PassState.cpp',
	#'gameplay/optimizer/AnalyticPassPlanner.cpp',
	#'gameplay/optimizer/passOptimization.cpp',
	#'gameplay/optimizer/DrivingFactors.cpp',
	#'gameplay/optimizer/PassingFactors.cpp',
	#'gameplay/optimizer/ShootingFactors.cpp',

	# Restart plays
	'gameplay/plays/OurKickoff.cpp',
	'gameplay/plays/TheirKickoff.cpp',
	'gameplay/plays/OurFreekick.cpp',
	'gameplay/plays/TheirFreekick.cpp',
	'gameplay/plays/KickPenalty.cpp',
	'gameplay/plays/DefendPenalty.cpp',
	'gameplay/plays/Stopped.cpp',
	
	# Open gameplay plays
	'gameplay/plays/MightyMight.cpp',
	'gameplay/plays/BasicOffense.cpp',
	'gameplay/plays/BasicOffense121.cpp',
#	'gameplay/plays/AggressiveOpen.cpp',
#	'gameplay/plays/Offense.cpp',
#	'gameplay/plays/ClearBall.cpp',
#	'gameplay/plays/Defense.cpp',
#	'gameplay/plays/DefendGoal.cpp',
#	'gameplay/plays/OptimizedOffense.cpp',

    # Core behaviors
	'gameplay/behaviors/Move.cpp',
	'gameplay/behaviors/Capture.cpp',
	'gameplay/behaviors/Kickoff.cpp',
	'gameplay/behaviors/Penalty.cpp',
	'gameplay/behaviors/Idle.cpp',
	'gameplay/behaviors/Kick.cpp',
#	'gameplay/behaviors/OneTouchKick.cpp',
#	'gameplay/behaviors/Intercept.cpp',
	'gameplay/behaviors/Mark.cpp',
#	'gameplay/behaviors/GoalDefender.cpp',
#	'gameplay/behaviors/ZoneOffense.cpp',
	'gameplay/behaviors/LineKick.cpp',
	'gameplay/behaviors/PivotKick.cpp',

	# Positions
	'gameplay/behaviors/positions/Goalie.cpp',
	'gameplay/behaviors/positions/Fullback.cpp',
#	'gameplay/behaviors/positions/Forward.cpp',
	
	# Test framework for plays
	'gameplay/TestFixture.cpp',
	'gameplay/plays/test_plays/TestPathTracking.cpp',
	
	# Development tests
#	'gameplay/plays/TestLatency.cpp',

	# demo plays/behaviors
	'gameplay/plays/demo_plays/FollowTheLeader.cpp',
	'gameplay/plays/demo_plays/LineUp.cpp',
	'gameplay/plays/demo_plays/MotionEval.cpp',
#	'gameplay/plays/demo_plays/DemoBasicPassing.cpp',
#	'gameplay/plays/demo_plays/DemoBasicOneTouchPassing.cpp',
	'gameplay/plays/demo_plays/DemoBasicAttack.cpp',
	'gameplay/plays/demo_plays/DemoCapture.cpp',
	'gameplay/plays/demo_plays/DemoBasicLineAttack.cpp',
	'gameplay/plays/demo_plays/DemoBasicPivotAttack.cpp',
#	'gameplay/plays/demo_plays/DemoBasicOneTouchAttack.cpp',
#	'gameplay/plays/demo_plays/DemoBasicChipAttack.cpp #disabled until 2010 robots ready',
#	'gameplay/plays/demo_plays/DemoBasicOneTouchChipAttack.cpp',
#	'gameplay/plays/demo_plays/DemoKicks.cpp',
	'gameplay/plays/demo_plays/KickWithClosestPlay.cpp',
#	'gameplay/plays/demo_plays/CalSpeed.cpp',
	
	# Tech Challenges
	'gameplay/plays/demo_plays/NavChallenge2011.cpp',

	# files that use the optimizer - disabled until new gtsam is in place
#	'gameplay/behaviors/OptimizedPassing.cpp',
#	'gameplay/plays/demo_plays/DemoPassConfigOptimize.cpp',
#	'gameplay/plays/demo_plays/DemoPassPlay.cpp',
#	'gameplay/plays/demo_plays/DemoOptimizedPassPlay.cpp',

	# files for pass experiments
#	'gameplay/plays/demo_plays/DemoPassExperiment1.cpp',

#	gameplay/behaviors/test/KickerCalibration.cpp',
#	gameplay/behaviors/test/MotionLeader.cpp',

# Sources for modeling module
	'modeling/WorldModel.cpp',
	'modeling/BallModel.cpp',
	'modeling/RBPFBallModel.cpp',
#	'modeling/EKFBallModel.cpp',
#	'modeling/KalmanBallModel.cpp',      
	'modeling/RobotModel.cpp',
	'modeling/rbpf/Rbpf.cpp',
	'modeling/rbpf/RbpfModel.cpp',
	'modeling/rbpf/RbpfModelGraph.cpp',
	'modeling/rbpf/RbpfState.cpp',
	'modeling/rbpf/RbpfModelRolling.cpp',
	'modeling/rbpf/RbpfModelKicked.cpp',
#	'modeling/kalman/difference_kalman.cpp',
#	'modeling/kalman/ExtendedKalmanFilter.cpp',

# Sources for motion module',
	'motion/MotionControl.cpp',
	'motion/Pid.cpp',
	
	'ui/main_icons.qrc',
	'ui/log_icons.qrc'
]

uics = env.Uic4([
	'ui/MainWindow.ui',
	'ui/PlayConfigTab.ui'
])

e = env.Clone()
e.Append(CPPPATH=['#/soccer', Dir('ui')])
e.Append(LIBS=['bfd'])

e.ParseConfig('pkg-config --cflags --libs libusb-1.0')

# build soccer executable
p = e.Program('soccer', ['main.cpp'] + srcs )
env.Depends(p, uics)
Default(e.Install(exec_dir, p))
Help('soccer: Main program\n')

# build log viewer executable 
p = e.Program('log_viewer', [
	'LogViewer.cpp',
	'FieldView.cpp',
	'ProtobufTree.cpp',
	'StripChart.cpp',
	'debug.cpp',
	'ui/log_icons.qrc'
])
env.Depends(p, env.Uic4('ui/LogViewer.ui'))
Default(e.Install(exec_dir, p))
Help('log_viewer: Stand-alone log viewer\n')

# build unit tests and framework
# Add new unit tests here
tests = [
	'tests/testExamples.cpp',
	'tests/testPath.cpp',
	'tests/testEigen.cpp',
	'tests/testRbpf.cpp'
]
e.Append(LIBS=['gtest'])
# NOTE: this links against all sources to avoid needing to actually check dependencies
p = e.Program('soccer_tests', ['tests/gtest_main.cpp'] + tests + srcs)
Default(e.Install(exec_dir, p))
test_alias = e.Alias('test', [p], p[0].abspath)
AlwaysBuild(test_alias)
Help('test: Run tests\n')

Import('*')

srcs = [
#	'main.cpp',  # don't include main here to allow for separate test and run executables
	'Processor.cpp',
	'Logger.cpp',
	'MainWindow.cpp',
	'ProtobufTree.cpp',
	'Joystick.cpp',
	'RefereeModule.cpp',
	'PlayConfigTab.cpp',
	'FieldView.cpp',
	'SimFieldView.cpp',
	'Configuration.cpp',
	'StripChart.cpp',
	'Robot.cpp',
	'VisionReceiver.cpp',

	'radio/SimRadio.cpp',
	'radio/USBRadio.cpp',

	'planning/Obstacle.cpp',
	'planning/Path.cpp',
	'SystemState.cpp',
	'RobotConfig.cpp',

	# Core gameplay components',
	'gameplay/GameplayModule.cpp',
	'python/EmbeddedInstance.cpp',
	'python/robocup-py.cpp',

	# Field evaluation
	'gameplay/evaluation/WindowEvaluator.cpp',
	'gameplay/evaluation/ReceivePointEvaluator.cpp',
	'gameplay/evaluation/FieldEvaluator.cpp',

	# Planning components',
	'planning/RRTPlanner.cpp',
	'planning/Tree.cpp',

	# Sources for motion module',
	'motion/MotionControl.cpp',
	'motion/TrapezoidalMotion.cpp',


	# Sources for modeling module
	'modeling/BallTracker.cpp',
	'modeling/BallFilter.cpp',
	'modeling/RobotFilter.cpp',
	
	
	'ui/main_icons.qrc',
	'ui/log_icons.qrc'
]

uics = env.Uic4([
	'ui/MainWindow.ui',
	'ui/PlayConfigTab.ui'
])

e = env.Clone()
e.Append(CPPPATH=['#/soccer', Dir('ui')])
e.Append(LIBS=['bfd', 'GLU'])

# python stuff
e.Append(LIBS=['boost_python-py33'])
e.ParseConfig('pkg-config --cflags --libs python3')

e.ParseConfig('pkg-config --cflags --libs libusb-1.0')

# build soccer executable
p = e.Program('soccer', ['main.cpp'] + srcs )
env.Depends(p, uics)
Default(e.Install(exec_dir, p))
Help('soccer: Main program\n')

# build log viewer executable 
p = e.Program('log_viewer', [
	'LogViewer.cpp',
	'FieldView.cpp',
	'ProtobufTree.cpp',
	'StripChart.cpp',
	'ui/log_icons.qrc'
])
env.Depends(p, env.Uic4('ui/LogViewer.ui'))
Default(e.Install(exec_dir, p))
Help('log_viewer: Stand-alone log viewer\n')
